package com.fr.station.component.customer.dao.impl;

import java.util.ArrayList;
import java.util.List;

import org.apache.commons.lang.StringUtils;
import org.apache.log4j.Logger;
import org.hibernate.Query;
import org.hibernate.QueryException;
import org.springframework.stereotype.Repository;

import com.fr.station.common.bean.RegisterCustomerBean;
import com.fr.station.common.entity.card.FkTCardEntity;
import com.fr.station.common.utility.ErrorLogUtil;
import com.fr.station.component.customer.dao.RegistMultiCustomerDAO;
import com.fr.station.component.system.dao.AbstractBaseDAO;

@Repository
public class RegistMultiCustomerDaoImpl extends AbstractBaseDAO<FkTCardEntity> implements RegistMultiCustomerDAO {

	// ------- Constants (static final) ----------------------------------------
	private static Logger log = Logger.getLogger(RegistMultiCustomerDaoImpl.class);

	// ------- Static Variables (static) ---------------------------------------

	// ------- Instance Variables (private) ------------------------------------
	/**
	 * 查询司机一览SQL 2014-7-26更新
	 */
	private final String driverSql = "SELECT guest.guestName,guest.guestNo,guest.stats,card.guestNum,card.cardNo,card.cardStatus,guest.cardNo,guestDep.depName "
			+ "FROM FK_T_GUEST guest,FK_T_CARD card,FK_T_GUESTDEP guestDep WHERE guest.guestNo = card.guestNo AND card.depNo = guestDep.depNo";

	/**
	 * 统计司机一览SQL 2014-7-26更新
	 */
	private final String countDriverSql = "SELECT count(*) FROM FK_T_GUEST guest,FK_T_CARD card,FK_T_GUESTDEP guestDep WHERE guest.guestNo = card.guestNo AND card.depNo = guestDep.depNo";

	/**
	 * guestNo自增
	 */
	private final String updateSysParameterAttriValueSql = "UPDATE stationParameter SET attriValue = (SELECT attriValue FROM stationParameter WHERE attriName = 'guestNo') WHERE attriName = ? ";

	// ------- Constructors ----------------------------------------------------
	public RegistMultiCustomerDaoImpl() {
		super();
	}

	// ------- Instance Methods (public) ---------------------------------------
	@Override
	public List<RegisterCustomerBean> getDriverRecordsByCriteria(RegisterCustomerBean registerCustomerBean, int startPage,
			int number) {
		List<RegisterCustomerBean> resultList = null;
		int totalSize = 0;
		StringBuilder builderForPagination = new StringBuilder();
		StringBuilder builderForTotalResult = new StringBuilder();
		builderForPagination.append(this.driverSql);
		builderForTotalResult.append(this.countDriverSql);
		try {
			StringBuilder builder = this.validateDriverInput(registerCustomerBean);
			builderForPagination.append(builder);
			builderForTotalResult.append(builder);
			Query query = this.getQueryByCriteria(builderForPagination.toString());
			Object[] resultAccount = this.findBySql(builderForTotalResult.toString()).toArray();
			if (resultAccount != null) {
				totalSize = (int) resultAccount[0];
			}
			query.setFirstResult(startPage);
			query.setMaxResults(number);
			List<Object[]> result = query.list();
			resultList = this.convertDriverDataToBean(result, totalSize);
		} catch (QueryException e) {
			log.info("Sql is not correct, please check it again, more detail please see the detail log" + e.getMessage() + "\n"
					+ ErrorLogUtil.printInfo(e));
		} catch (Exception e) {
			log.info("Get DB data occured error, more detail please see the detail log" + e.getMessage() + "\n"
					+ ErrorLogUtil.printInfo(e));
		}
		return resultList;
	}

	/**
	 * 查询客户编号 2014-7-24
	 */
	@Override
	public Integer getGuestNo() {
		Integer guestNo = 0;
		try {
			guestNo = (Integer) this.findBySql("SELECT attriValue FROM stationParameter WHERE attriName = 'guestNo' ").get(0);
		} catch (Exception e) {
			log.info("Sql is not correct, please check it again, more detail please see the detail log" + e.getMessage() + "\n"
					+ ErrorLogUtil.printInfo(e));
			e.printStackTrace();
		}
		return guestNo;
	}

	@Override
	public void updateGuestNo() {
		Object[] args = { "guestNo" };
		this.upateBySql(this.updateSysParameterAttriValueSql, args);
	}

	// ------- Instance Methods (protected) ------------------------------------

	// ------- Instance Methods (private) --------------------------------------
	/**
	 * 查询司机信息SQL语句查询条件
	 */
	private StringBuilder validateDriverInput(RegisterCustomerBean registerCustomerBean) {
		StringBuilder builder = new StringBuilder();
		if (StringUtils.isNotEmpty(registerCustomerBean.getMainCardNo())) {
			builder.append(" AND ").append("guest.cardNo = '").append(registerCustomerBean.getMainCardNo()).append("'");
		}
		if (StringUtils.isNotEmpty(registerCustomerBean.getGuestNo())) {
			builder.append(" AND ")
					.append("guest.cardNo IN ( SELECT guest2.cardNo FROM FK_T_CARD card2 WHERE card2.guestNo = '")
					.append(registerCustomerBean.getGuestNo()).append("' )");
		}
		return builder;
	}

	/**
	 * 把司机信息查询结果覆盖到RegisterCustomerBean 2014-7-26跟新
	 */
	private List<RegisterCustomerBean> convertDriverDataToBean(List<Object[]> dataResult, int totalAccount) {
		List<RegisterCustomerBean> registerCustomerBeanList = new ArrayList<RegisterCustomerBean>();
		RegisterCustomerBean registerCustomerBean = null;
		for (Object[] dataRow : dataResult) {
			registerCustomerBean = new RegisterCustomerBean();
			registerCustomerBean.setGuestNo(String.valueOf(dataRow[0]));
			registerCustomerBean.setGuestName(String.valueOf(dataRow[1]));
			registerCustomerBean.setGuestStatus(String.valueOf(dataRow[2]));
			registerCustomerBean.setGuestNum(String.valueOf(dataRow[3]));
			registerCustomerBean.setCardNo(String.valueOf(dataRow[4]));
			registerCustomerBean.setCardStatus(String.valueOf(dataRow[5]));
			registerCustomerBean.setMainCardNo(String.valueOf(dataRow[6]));
			registerCustomerBean.setDepName(String.valueOf(dataRow[7]));
			registerCustomerBeanList.add(registerCustomerBean);
		}
		return registerCustomerBeanList;
	}
	// ------- Static Methods --------------------------------------------------

	// ------- Optional Inner Class ------------------------------------------

}
